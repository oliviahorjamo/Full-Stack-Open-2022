services:
  frontend:
    image: todo-frontend
    build:
      context: ./todo-frontend
    volumes:
      - ./todo-frontend:/usr/src/app
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080/api
    container_name: todo-frontend
  backend:
    image: todo-backend
    build:
      context: ./todo-backend
    volumes:
      - ./todo-backend:/usr/src/app
    environment:
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
      - REDIS_URL=redis://redis:6379
    container_name: todo-backend
    depends_on:
      - mongo
      - redis
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
  redis:
    image: redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ./todo-backend/redis_data:/data
  nginx:
    image: nginx
    build: ./todo-frontend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx-conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - frontend
      - backend



# This works and all services are up but the connection to the backend
# doesn't work.

# The backend should be served through nginx 8080/api/ port but it can't be found
# Maybe this has something to do with the previous error of both back and front
# connecting to port 3000 and hence, only one of them working